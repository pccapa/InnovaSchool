@model GAA.Web.ViewModels.SolicitudAdmisionViewModel

@{
    Layout = "~/Views/_Layout.cshtml";
    ViewBag.Title = "Registrar Admision";
}

<h2>Registrar Admisión</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "onlineform" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4></h4>
        <br />
        @{
    var message = TempData["AlertMessage"] ?? string.Empty;
        }

        <script type="text/javascript">

            $(document).ready(function () {
                
                $('#CodDepartamentoApoderado').change(function () {                    
                    $.ajax({
                        cache: false,
                        type: "GET",
                        url: "/SolicitudAdmision/GetCiudad",
                        data: { "codDepartamento": $(this).val() },
                        success: function (data) {
                            $("#CodCiudadApoderado").html('');
                            $.each(data, function (id, option) {
                                $("#CodCiudadApoderado").append($('<option></option>').val(option.id).html(option.name));
                                ConseguirCiudades();
                            });
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert('Falló al recibir las Ciudades.');
                        }
                    });
                });




                $('#CodCiudadApoderado').change(function () {
                    
                    $.ajax({
                        cache: false,
                        type: "GET",
                        url: "/SolicitudAdmision/GetSucursal",
                        data: { "codCiudad": $(this).val() },
                        success: function (data) {
                            $("#CodSucursal").html('');
                            $.each(data, function (id, option) {
                                $("#CodSucursal").append($('<option></option>').val(option.id).html(option.name));
                            });
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert('Falló al recibir las Sucursales.');
                        }
                    });
                });



                function ConseguirCiudades() {                    
                    $.ajax({
                        cache: false,
                        type: "GET",
                        url: "/SolicitudAdmision/GetSucursal",
                        data: { "codCiudad": $('#CodCiudadApoderado').val() },
                        success: function (data) {
                            $("#CodSucursal").html('');
                            $.each(data, function (id, option) {
                                $("#CodSucursal").append($('<option></option>').val(option.id).html(option.name));
                            });
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert('Falló al recibir las Sucursales.');
                        }
                    });
                }


                $('#btnCancelar').click(function () {
                    if (confirm('¿Seguro que desea cancelar su solicitud? Los datos no seran guardados.')) {
                        window.location.href = '/SolicitudAdmision/Create/';
                    }
                });


            });
            

            function Guardar() {
                var form = $("#onlineform");           
                if (form.valid()) {

                    $.ajax({
                        type: 'POST',
                        url: "/SolicitudAdmision/CreateSolicitud",
                        data: form.serialize(),
                        dataType: 'json',
                        success: function (response) {
                            if (response != null && response.success) {
                                window.location.href = response.url;
                            } else {
                                alert(response.responseText);
                            }
                        }
                    });
                }
            }


        </script>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <fieldset>
            <legend>Datos del Tutor/Apoderado</legend>
            <table class="form-group" style="width:100%" align="left">
                <tr>
                    <td class="col-md-5" width="35%">
                        @Html.LabelFor(model => model.NombresApoderado, "Nombres Apoderado (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.NombresApoderado, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NombresApoderado, "", new { @class = "text-danger" })
                    </td>
                    <td class="col-md-5" width="35%">
                        @Html.LabelFor(model => model.ApellidosApoderado, "Apellidos Apoderado (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ApellidosApoderado, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApellidosApoderado, "", new { @class = "text-danger" })
                    </td>
                    <td class="col-md-5" width="30%">
                        @Html.LabelFor(model => model.IdVinculoApoderado, "Vinculo Postulante (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("IdVinculoApoderado", (SelectList)ViewBag.ListaApoderadoVinculo, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IdVinculoApoderado, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="col-md-5" width="50%">
                        @Html.LabelFor(model => model.CodTipoDocumentoApoderado, "Tipo Documento Apoderado (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("CodTipoDocumentoApoderado", (SelectList)ViewBag.ListaTipoDocumento, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CodTipoDocumentoApoderado, "", new { @class = "text-danger" })
                    </td>
                    <td class="col-md-5" width="50%">
                        @Html.LabelFor(model => model.NumDocumentoApoderado, "Numero Documento Apoderado (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.NumDocumentoApoderado, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumDocumentoApoderado, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="col-md-5" width="40%">
                        @Html.LabelFor(model => model.OcupacionApoderado, "Ocupacion Apoderado (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.OcupacionApoderado, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OcupacionApoderado, "", new { @class = "text-danger" })
                    </td>
                    <td class="col-md-5" width="40%">
                        @Html.LabelFor(model => model.EmailApoderado, "Email Apoderado (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.EmailApoderado, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailApoderado, "", new { @class = "text-danger" })
                    </td>
                    <td class="col-md-5" width="20%">
                        @Html.LabelFor(model => model.TelefonoApoderado, "Teléfono Apoderado (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.TelefonoApoderado, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TelefonoApoderado, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="col-md-5" width="20%">
                        @Html.LabelFor(model => model.CodDepartamentoApoderado, "Departamento (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("CodDepartamentoApoderado", (SelectList)ViewBag.ListaDepartamento, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CodDepartamentoApoderado, "", new { @class = "text-danger" })
                    </td>
                    <td class="col-md-5" width="20%">
                        @Html.LabelFor(model => model.CodCiudadApoderado, "Ciudad (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.CodCiudadApoderado, Enumerable.Empty<SelectListItem>(), "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CodCiudadApoderado, "", new { @class = "text-danger" })
                    </td>
                    <td class="col-md-5" width="60%">
                        @Html.LabelFor(model => model.DireccionApoderado, "Direccion (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.DireccionApoderado, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DireccionApoderado, "", new { @class = "text-danger" })
                    </td>
                </tr>
            </table>
            <br />

            <legend>Datos del Alumno Postulante</legend>
            <table class="form-group" style="width:100%" align="left">
                <tr>
                    <td class="col-md-5" width="40%">
                        @Html.LabelFor(model => model.NombresPostulante, "Nombres Postulante (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.NombresPostulante, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NombresPostulante, "", new { @class = "text-danger" })
                    </td>
                    <td class="col-md-5" width="40%">
                        @Html.LabelFor(model => model.ApellidoPostulante, "Nombres Postulante (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ApellidoPostulante, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApellidoPostulante, "", new { @class = "text-danger" })
                    </td>
                    <td class="col-md-5" width="20%">
                        @Html.LabelFor(model => model.CodGenero, "Genero (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("CodGenero", (IEnumerable<SelectListItem>)ViewBag.ListaGenero, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CodGenero, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="col-md-5" width="50%">
                        @Html.LabelFor(model => model.CodTipoDocumentoPostulante, "Tipo Documento Postulante (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("CodTipoDocumentoPostulante", (SelectList)ViewBag.ListaTipoDocumento, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CodTipoDocumentoPostulante, "", new { @class = "text-danger" })
                    </td>
                    <td class="col-md-5" width="50%">
                        @Html.LabelFor(model => model.NumDocumentoPostulante, "Numero Documento Postulante (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.NumDocumentoPostulante, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumDocumentoPostulante, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="col-md-5" width="50%">
                        @Html.LabelFor(model => model.FechaNacimientoPostulante, "Fecha de Nacimiento (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.FechaNacimientoPostulante, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FechaNacimientoPostulante, "", new { @class = "text-danger" })
                    </td>
                    <td class="col-md-5" width="50%">
                        @Html.LabelFor(model => model.LugarNacimiento, "Lugar de Nacimiento", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.LugarNacimiento, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LugarNacimiento, "", new { @class = "text-danger" })
                    </td>
                </tr>
            </table>
            <br />

            <legend>Detalle de la Postulación</legend>
            <table class="form-group" style="width:100%" align="left">
                <tr>
                    <td class="col-md-5" width="50%">
                        @Html.LabelFor(model => model.CodGrado, "Grado (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("CodGrado", (SelectList)ViewBag.ListaGrado, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CodGrado, "", new { @class = "text-danger" })
                    </td>
                    <td class="col-md-5" width="50%">
                        @Html.LabelFor(model => model.CodSucursal, "Sucursal (*)", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("CodSucursal", (SelectList)ViewBag.ListaSucursal, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CodSucursal, "", new { @class = "text-danger" })
                    </td>
                </tr>
            </table>
        </fieldset>
        <br /><br />
        <table class="form-group" style="width:100%">
            <tr>
                <td class="col-md-5" width="80%" align="left">
                    <b>(*) Campos Obligatorios</b>
                </td>
                <td class="col-md-5" width="10%" align="right">
                    <input type="button" value="Cancelar" id="btnCancelar" class="btn btn-info" />
                </td>
                <td class="col-md-5" width="10%" align="right">
                    <input type="button" value="Continuar" id="btnContinuar" name="btnContinuar" onclick="Guardar();" class="btn btn-info" />
                </td>
            </tr>
        </table>
    </div>
}



