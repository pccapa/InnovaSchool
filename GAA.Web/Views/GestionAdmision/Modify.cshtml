@model GAA.Web.ViewModels.GestionAdmisionViewModel
@{
    ViewBag.Title = "Solicitud de Admisión";
    Layout = "~/Views/_Layout.cshtml";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "onlineform" }))
{

    @Html.AntiForgeryToken()

    <script type="text/javascript">
        $(document).ready(function () {

            $("#FechaNacimientoPostulante").attr('readOnly', 'true');

            $('#btnGuardar').click(function () {
                document.getElementById('msjMensaje').innerHTML = '';
                var form = $("#onlineform");
                if (form.valid()) {
                    $.ajax({
                        type: 'POST',
                        url: "/GestionAdmision/Modify",
                        data: form.serialize(),
                        dataType: 'json',
                        success: function (response) {
                            if (response != null && response.success && response.responseText == 'OK') {
                                document.getElementById('msjMensaje').innerHTML = 'Se actualizó el registro satisfactoriamente';
                                $('#btCerrarModal').click(function () {
                                    window.location.href = '/GestionAdmision/Consulta/';
                                });
                            } else {
                                document.getElementById('msjMensaje').innerHTML = response.responseText;
                            }
                        }
                    });
                }
                else {
                    document.getElementById('msjMensaje').innerHTML = 'Verifique los datos';
                }
                    
            });



            $('#FechaNacimientoPostulante').datepicker({
                dateFormat: 'dd/mm/yy',
                changeMonth: true,
                changeYear: true,
                yearRange: '1960:2016',
                //showOn: "button",
                //buttonImage: "images/calendar.gif",
                //buttonImageOnly: true,
                //minDate: new Date(1999, 10 - 1, 25),
                //maxDate: '+30Y',
                //inline: true

            });



            $('#CodDepartamento').change(function () {
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "/GestionAdmision/GetCiudad",
                    data: { "codDepartamento": $(this).val() },
                    success: function (data) {
                        $("#CodCiudad").html('');
                        $.each(data, function (id, option) {
                            $("#CodCiudad").append($('<option></option>').val(option.id).html(option.name));
                        });
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Falló al recibir las Ciudades.');
                    }
                });
            });


            $('#btnSalir').click(function () {
                window.location.href = '/GestionAdmision/Consulta/';
            });





            ChangeDocumentoApoderado1($("#CodTipoDocumentoApoderado option:selected").val());
            ChangeDocumentoPostulante1($("#CodTipoDocumentoPostulante option:selected").val());
      

            //$('#btnGuardar').modal({ backdrop: 'static', keyboard: false })


        });


        function ChangeDocumentoApoderado1(valor) {
            switch (valor) {
                case '1':
                    $('#NumDocumentoApoderado').prop('maxlength', '8');
                    break;
                case '2':
                    $('#NumDocumentoApoderado').prop('maxlength', '12');
                    break;
            }
        }




        function ChangeDocumentoPostulante1(valor) {
            switch (valor) {
                case '1':
                    $('#NumDocumentoPostulante').prop('maxlength', '8');
                    break;
                case '2':
                    $('#NumDocumentoPostulante').prop('maxlength', '12');
                    break;
            }
        }


        /////////////////////////////


        function ChangeDocumentoApoderado(valor) {
            $('#NumDocumentoApoderado').val('');
            switch (valor) {
                case '1':
                    $('#NumDocumentoApoderado').prop('maxlength', '8');
                    break;
                case '2':
                    $('#NumDocumentoApoderado').prop('maxlength', '12');
                    break;
            }
        }



        function ChangeDocumentoPostulante(valor) {
            $('#NumDocumentoPostulante').val('');
            switch (valor) {
                case '1':
                    $('#NumDocumentoPostulante').prop('maxlength', '8');
                    break;
                case '2':
                    $('#NumDocumentoPostulante').prop('maxlength', '12');
                    break;
            }
        }



    </script>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <fieldset>
        @Html.HiddenFor(model => model.CodApoderado, new { id = "hdCodApoderado" })
        @Html.HiddenFor(model => model.CodPostulante, new { id = "hdCodPostulante" })
        @Html.HiddenFor(model => model.CodSolicitudAdmision, new { id = "hdCodSolicitudAdmision" })
        <div class="panel panel-primary" style="width:100%">
            <div class="panel-heading">Datos del Apoderado</div>
            <div class="panel-body">
                <table class="table-condensed">
                    <tbody>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.NombresApoderado, "Nombres Apoderado (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.NombresApoderado, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NombresApoderado, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.ApellidosApoderado, "Apellidos Apoderado (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ApellidosApoderado, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ApellidosApoderado, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.CodTipoDocumentoApoderado, "Tipo Documento Apoderado (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("CodTipoDocumentoApoderado", (SelectList)ViewBag.ListaTipoDocumento, "-Seleccione-", htmlAttributes: new { @class = "form-control", @onchange = "ChangeDocumentoApoderado(this.value);" })
                                @Html.ValidationMessageFor(model => model.CodTipoDocumentoApoderado, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.NumDocumentoApoderado, "Numero Documento Apoderado (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.NumDocumentoApoderado, new { htmlAttributes = new { @class = "form-control", @maxlength = "9" } })
                                @Html.ValidationMessageFor(model => model.NumDocumentoApoderado, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.OcupacionApoderado, "Ocupacion Apoderado (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.OcupacionApoderado, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.OcupacionApoderado, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.EmailApoderado, "Email Apoderado (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.EmailApoderado, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmailApoderado, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.TelefonoApoderado, "Teléfono Apoderado (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.TelefonoApoderado, new { htmlAttributes = new { @class = "form-control", @maxlength = "15" } })
                                @Html.ValidationMessageFor(model => model.TelefonoApoderado, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.DireccionApoderado, "Direccion (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.DireccionApoderado, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DireccionApoderado, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.CodVinculo, "Vínculo Postulante (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("CodVinculo", (SelectList)ViewBag.ListaApoderadoVinculo, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CodVinculo, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <div class="panel panel-primary" style="width:100%">
            <div class="panel-heading">Datos del Postulante</div>
            <div class="panel-body">
                <table class="table-condensed">
                    <tbody>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.NombresPostulante, "Nombres Postulante (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.NombresPostulante, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NombresPostulante, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.ApellidosPostulante, "Apellidos Postulante (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ApellidosPostulante, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ApellidosPostulante, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.CodTipoDocumentoPostulante, "Tipo Documento Postulante (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("CodTipoDocumentoPostulante", (SelectList)ViewBag.ListaTipoDocumento, "-Seleccione-", htmlAttributes: new { @class = "form-control", @onchange = "ChangeDocumentoPostulante(this.value);"})
                                @Html.ValidationMessageFor(model => model.CodTipoDocumentoPostulante, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.NumDocumentoPostulante, "Numero Documento Postulante (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.NumDocumentoPostulante, new { htmlAttributes = new { @class = "form-control", @maxlength = "9" } })
                                @Html.ValidationMessageFor(model => model.NumDocumentoPostulante, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.FechaNacimientoPostulante, "Fecha de Nacimiento (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.FechaNacimientoPostulante, new { htmlAttributes = new { @class = "form-control" } })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.LugarNacimientoPostulante, "Lugar de Nacimiento", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.LugarNacimientoPostulante, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LugarNacimientoPostulante, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.CodGenero, "Género (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("CodGenero", (IEnumerable<SelectListItem>)ViewBag.ListaGenero, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CodGenero, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.CodDepartamento, "Provincia (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("CodDepartamento", (SelectList)ViewBag.ListaDepartamento, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CodDepartamento, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.CodCiudad, "Distrito (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.CodCiudad, (SelectList)ViewBag.ListaCiudad, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CodCiudad, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <div class="panel panel-primary" style="width:100%">
            <div class="panel-heading">Detalles</div>
            <div class="panel-body">
                <table class="table-condensed">
                    <tbody>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.CodGrado, "Grado (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("CodGrado", (SelectList)ViewBag.ListaGrado, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CodGrado, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.CodSucursal, "Sucursal (*)", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("CodSucursal", (SelectList)ViewBag.ListaSucursal, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CodSucursal, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <br />
            <b>(*) Campos Obligatorios</b>
            <br />
            <div class="btn-group">
                <input type="button" value="Guardar" id="btnGuardar" class="btn-primary" data-toggle="modal" data-target="#myModal" />
                <input type="button" value="Salir" id="btnSalir" class="btn-primary" />
            </div>
        </div>

        <div class="modal fade" id="myModal" role="dialog">
            <div class="modal-dialog modal-sm">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Innova School</h4>
                    </div>
                    <div class="modal-body">
                        <p id="msjMensaje"></p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" id="btCerrarModal" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>


    </fieldset>
}



